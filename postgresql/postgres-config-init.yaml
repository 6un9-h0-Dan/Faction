apiVersion: v1
kind: ConfigMap
metadata:
    name: postgres-config-init
    labels:
        app: postgres
data:
    faction.sql: |+
        SET statement_timeout = 0;
        SET lock_timeout = 0;
        SET idle_in_transaction_session_timeout = 0;
        SET client_encoding = 'UTF8';
        SET standard_conforming_strings = on;
        SET check_function_bodies = false;
        SET xmloption = content;
        SET client_min_messages = warning;
        SET row_security = off;
        SET default_tablespace = '';
        SET default_table_access_method = heap;

        CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;
        COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';

        /*
         Functions
         */

        CREATE OR REPLACE FUNCTION random_range(INTEGER, INTEGER)
            RETURNS INTEGER
            LANGUAGE SQL
            AS $$
                SELECT ($1 + FLOOR(($2 - $1 + 1) * random() ))::INTEGER;
            $$;

        CREATE OR REPLACE FUNCTION random_text(length INTEGER)
            RETURNS TEXT
            LANGUAGE PLPGSQL
            AS $$
            DECLARE
                possible_chars TEXT := '0123456789ABCDEFGHJKLMNPQRSTUVWXYZ';
                output TEXT := '';
                i INT4;
                pos INT4;
            BEGIN

                FOR i IN 1..length LOOP
                    pos := random_range(1, length(possible_chars));
                    output := output || substr(possible_chars, pos, 1);
                END LOOP;

                RETURN output;
            END;
            $$;

        ALTER FUNCTION public.random_text(length integer) OWNER TO postgres;

        --------------------------------------------------------------------------

        /*
         Agent Checkins
         */

        CREATE TABLE public.agent_checkins (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            agent_id integer,
            source_ip text,
            transport_id integer NOT NULL,
            iv text,
            hmac text,
            message character varying,
            received timestamp without time zone default (now() at time zone 'utc')
        );


        ALTER TABLE public.agent_checkins OWNER TO postgres;


        /*
         Agents
         */
        CREATE TABLE public.agents (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            staging_id text,
            name character varying,
            aes_password character varying,
            username character varying,
            hostname character varying,
            pid integer,
            operating_system character varying,
            admin boolean,
            agent_type_id integer NOT NULL,
            payload_id integer NOT NULL,
            staging_response_id integer NOT NULL,
            internal_ip character varying,
            external_ip character varying,
            initial_checkin timestamp without time zone default (now() at time zone 'utc'),
            last_checkin timestamp without time zone,
            transport_id integer NOT NULL,
            beacon_interval integer,
            jitter double precision,
            visible boolean DEFAULT true NOT NULL
        );


        /*
         Agent Modules
         */
        CREATE TABLE public.agent_modules_xref (
            agent_id integer NOT NULL,
            module_id integer NOT NULL,
            PRIMARY KEY (agent_id, module_id)
        );

        /*
         Agent Tasks
         */
        CREATE TABLE public.agent_tasks (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name text,
            agent_id integer NOT NULL,
            console_message_id integer,
            action character varying,
            command character varying,
            created timestamp without time zone default (now() at time zone 'utc') NOT NULL
        );



        /*
         Agent Task Messages
         */

        CREATE TABLE public.agent_task_messages (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            agent_id integer,
            agent_task_id integer,
            iv text,
            hmac text,
            message character varying,
            sent boolean,
            created timestamp without time zone default (now() at time zone 'utc') NOT NULL
        );


        /*
         Agent Task Updates
         */

        CREATE TABLE public.agent_task_updates (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            agent_id integer NOT NULL,
            task_id integer,
            task_name text,
            message character varying,
            type text,
            content text,
            content_id text,
            complete boolean,
            success boolean,
            received timestamp without time zone default (now() at time zone 'utc')
        );


        /*
         Agent Transport Types
         */
        CREATE TABLE public.agent_transport_types (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name character varying,
            agent_type_id integer NOT NULL,
            transport_type_guid character varying,
            build_command character varying,
            build_location character varying
        );

        CREATE TABLE public.agent_transports_xref (
            agent_id integer NOT NULL,
            transport_id integer NOT NULL
        );


        /*
         Agent Type Architectures
         */
        CREATE TABLE public.agent_type_architectures (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name character varying UNIQUE,
            agent_type_id integer NOT NULL,
            UNIQUE (name, agent_type_id)
        );


        /*
         Agent Type Configurations
         */
        CREATE TABLE public.agent_type_configurations (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name character varying,
            agent_type_id integer NOT NULL,
            UNIQUE (name, agent_type_id)
        );


        /*
         Agent Type Formats
         */
        CREATE TABLE public.agent_type_formats (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name character varying UNIQUE,
            agent_type_id integer NOT NULL,
            UNIQUE (name, agent_type_id)
        );


        /*
         Agent Type Operating Systems
         */
        CREATE TABLE public.agent_type_operating_systems (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name character varying UNIQUE,
            agent_type_id integer NOT NULL,
            UNIQUE (name, agent_type_id)
        );


        /*
         Agent Type Versions
         */
        CREATE TABLE public.agent_type_versions (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name character varying UNIQUE,
            agent_type_id integer NOT NULL,
            UNIQUE (name, agent_type_id)
        );


        /*
         Agent Types
         */
        CREATE TABLE public.agent_types (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name character varying UNIQUE,
            guid character varying UNIQUE,
            authors character varying[],
            language_id integer NOT NULL,
            build_command text,
            build_location text,
            development boolean NOT NULL
        );


        /*
         API Keys
         */
        CREATE TABLE public.api_keys (
            id uuid DEFAULT public.gen_random_uuid()  PRIMARY KEY,
            user_id uuid NOT NULL,
            role_id integer,
            name character varying DEFAULT random_text(14) NOT NULL,
            description character varying NOT NULL,
            key bytea NOT NULL,
            created timestamp without time zone default (now() at time zone 'utc'),
            last_used timestamp without time zone,
            enabled boolean DEFAULT true,
            visible boolean DEFAULT true
        );


        /*
         Commands
         */
        CREATE TABLE public.commands (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name character varying,
            description text,
            help character varying,
            mitre_reference character varying,
            opsec_safe boolean NOT NULL,
            artifacts text,
            module_id integer,
            agent_type_id integer,
            UNIQUE (name, module_id)
        );

        CREATE TABLE public.command_parameters (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name character varying,
            help character varying,
            required boolean NOT NULL,
            position integer,
            values character varying,
            command_id integer NOT NULL,
            UNIQUE (name, command_id)
        );

        /*
         Console Messages
         */
        CREATE TABLE public.console_messages (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            agent_id integer NOT NULL,
            user_id uuid,
            agent_task_id integer,
            type text,
            content character varying,
            display text,
            received timestamp without time zone default (now() at time zone 'utc')
        );


        /*
         Error Messages
         */
        CREATE TABLE public.error_messages (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            source character varying,
            message character varying,
            details character varying,
            timestamp timestamp without time zone default (now() at time zone 'utc')
        );


        /*
         Faction Files
         */
        CREATE TABLE public.faction_files (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name character varying,
            hash character varying,
            hash_match boolean,
            agent_id integer,
            user_id uuid NOT NULL,
            created timestamp without time zone default (now() at time zone 'utc'),
            last_downloaded timestamp without time zone,
            visible boolean DEFAULT true NOT NULL
        );


        /*
         IOCs
         */
        CREATE TABLE public.iocs (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            description character varying,
            type text,
            identifier character varying,
            hash character varying,
            action character varying,
            agent_task_update_id integer NOT NULL,
            user_id uuid NOT NULL,
            timestamp timestamp without time zone NOT NULL
        );

        /*
         Languages
         */
        CREATE TABLE public.languages (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name character varying UNIQUE
        );


        /*
         Modules
         */
        CREATE TABLE public.modules (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name character varying,
            description text,
            authors character varying,
            build_command character varying,
            build_location character varying,
            language_id integer NOT NULL,
            UNIQUE (name, language_id)
        );


        /*
         Payloads
         */
        CREATE TABLE public.payloads (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name character varying DEFAULT public.random_text(12),
            description text,
            agent_type_id integer NOT NULL,
            agent_transport_type_id integer,
            transport_id integer NOT NULL,
            language_id integer,
            filename character varying,
            built boolean DEFAULT false NOT NULL,
            staging_key character varying DEFAULT public.random_text(48),
            beacon_interval integer NOT NULL,
            jitter double precision NOT NULL,
            agent_type_operating_system_id integer NOT NULL,
            agent_type_architecture_id integer NOT NULL,
            agent_type_version_id integer NOT NULL,
            agent_type_format_id integer NOT NULL,
            agent_type_configuration_id integer NOT NULL,
            debug boolean NOT NULL,
            created timestamp without time zone default (now() at time zone 'utc'),
            last_downloaded timestamp without time zone,
            expiration_date timestamp without time zone,
            visible boolean DEFAULT TRUE NOT NULL,
            enabled boolean DEFAULT TRUE NOT NULL,
            created_by uuid NOT NULL
        );


        /*
         Staging Messages
         */
        CREATE TABLE public.staging_messages (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            agent_name text,
            payload_id integer NOT NULL,
            source_ip text,
            transport_id integer NOT NULL,
            payload_name text,
            staging_id text,
            staging_response_id integer,
            iv text,
            hmac text,
            message character varying,
            received timestamp without time zone
        );

        CREATE TABLE public.staging_responses (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            agent_id integer,
            staging_message_id integer NOT NULL,
            iv character varying,
            hmac character varying,
            message character varying,
            created timestamp without time zone default (now() at time zone 'utc'),
            sent boolean NOT NULL DEFAULT FALSE
        );

        /*
         Transports
         */
        CREATE TABLE public.transports (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name character varying,
            transport_type character varying,
            guid character varying,
            configuration text,
            created timestamp without time zone default (now() at time zone 'utc'),
            last_checkin timestamp without time zone,
            enabled boolean DEFAULT true NOT NULL,
            visible boolean DEFAULT true NOT NULL
        );

        /*
         Users
         */
        CREATE TABLE public.user_roles (
            id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name character varying NOT NULL
        );

        CREATE TABLE public.users (
            id uuid DEFAULT public.gen_random_uuid() PRIMARY KEY,
            username character varying UNIQUE,
            password bytea,
            role_id integer,
            created timestamp without time zone default (now() at time zone 'utc'),
            last_login timestamp without time zone,
            enabled boolean DEFAULT true NOT NULL,
            visible boolean DEFAULT true NOT NULL
        );


        /*
         Foreign Keys
         */
        ALTER TABLE ONLY public.agents
            ADD CONSTRAINT agent_agent_type_id_fkey
                FOREIGN KEY (agent_type_id) REFERENCES public.agent_types(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.agents
            ADD CONSTRAINT agent_payload_id_fkey
                FOREIGN KEY (payload_id) REFERENCES public.payloads(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.agents
            ADD CONSTRAINT agent_transport_id_fkey
                FOREIGN KEY (transport_id) REFERENCES public.transports(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.agent_checkins
            ADD CONSTRAINT agent_checkin_agent_id_fkey
                FOREIGN KEY (agent_id) REFERENCES public.agents(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.agent_checkins
            ADD CONSTRAINT agent_checkin_transport_id_fkey
                FOREIGN KEY (transport_id) REFERENCES public.transports(id) ON DELETE CASCADE;

        ALTER TABLE ONLY public.agent_modules_xref
            ADD CONSTRAINT agent_modules_xref_agent_id_fkey
                FOREIGN KEY (agent_id) REFERENCES public.agents(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.agent_modules_xref
            ADD CONSTRAINT agent_modules_xref_transport_id_fkey
                FOREIGN KEY (module_id) REFERENCES public.modules(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.agent_tasks
            ADD CONSTRAINT agent_task_agent_id_fkey
                FOREIGN KEY (agent_id) REFERENCES public.agents(id) ON DELETE CASCADE;

        ALTER TABLE ONLY public.agent_tasks
            ADD CONSTRAINT agent_task_console_message_id_fkey
                FOREIGN KEY (console_message_id) REFERENCES public.console_messages(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.agent_task_messages
            ADD CONSTRAINT agent_task_message_agent_id_fkey
                FOREIGN KEY (agent_id) REFERENCES public.agents(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.agent_task_messages
            ADD CONSTRAINT agent_task_message_agent_task_id_fkey
                FOREIGN KEY (agent_task_id) REFERENCES public.agent_tasks(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.agent_task_updates
            ADD CONSTRAINT agent_task_update_agent_id_fkey
                FOREIGN KEY (agent_id) REFERENCES public.agents(id) ON DELETE CASCADE;

        ALTER TABLE ONLY public.agent_task_updates
            ADD CONSTRAINT agent_task_update_task_id_fkey
                FOREIGN KEY (task_id) REFERENCES public.agent_tasks(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.agent_transport_types
            ADD CONSTRAINT agent_transport_type_agent_type_id_fkey
                FOREIGN KEY (agent_type_id) REFERENCES public.agent_types(id) ON DELETE CASCADE;

        ALTER TABLE ONLY public.agent_transports_xref
            ADD CONSTRAINT agent_transports_xref_agent_id_fkey
                FOREIGN KEY (agent_id) REFERENCES public.agents(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.agent_transports_xref
            ADD CONSTRAINT agent_transports_xref_transport_id_fkey
                FOREIGN KEY (transport_id) REFERENCES public.transports(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.agent_type_architectures
            ADD CONSTRAINT agent_type_architecture_agent_type_id_fkey
                FOREIGN KEY (agent_type_id) REFERENCES public.agent_types(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.agent_type_configurations
            ADD CONSTRAINT agent_type_configuration_agent_type_id_fkey
                FOREIGN KEY (agent_type_id) REFERENCES public.agent_types(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.agent_type_formats
            ADD CONSTRAINT agent_type_format_agent_type_id_fkey
                FOREIGN KEY (agent_type_id) REFERENCES public.agent_types(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.agent_type_operating_systems
            ADD CONSTRAINT agent_type_operating_system_agent_type_id_fkey
                FOREIGN KEY (agent_type_id) REFERENCES public.agent_types(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.agent_type_versions
            ADD CONSTRAINT agent_type_version_agent_type_id_fkey
                FOREIGN KEY (agent_type_id) REFERENCES public.agent_types(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.agent_types
            ADD CONSTRAINT agent_type_language_id_fkey
                FOREIGN KEY (language_id) REFERENCES public.languages(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.api_keys
            ADD CONSTRAINT api_keys_users_fkey
                FOREIGN KEY (user_id) REFERENCES public.users(id);

        ALTER TABLE ONLY public.api_keys
            ADD CONSTRAINT api_keys_user_roles_id_fkey
                FOREIGN KEY (role_id) REFERENCES user_roles(id);

        ALTER TABLE ONLY public.commands
            ADD CONSTRAINT command_agent_type_id_fkey
                FOREIGN KEY (agent_type_id) REFERENCES public.agent_types(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.commands
            ADD CONSTRAINT command_module_id_fkey
                FOREIGN KEY (module_id) REFERENCES public.modules(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.command_parameters
            ADD CONSTRAINT command_parameter_command_id_fkey
                FOREIGN KEY (command_id) REFERENCES public.commands(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.console_messages
            ADD CONSTRAINT console_message_agent_id_fkey
                FOREIGN KEY (agent_id) REFERENCES public.agents(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.console_messages
            ADD CONSTRAINT console_message_user_id_fkey
                FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.faction_files
            ADD CONSTRAINT faction_file_agent_id_fkey
                FOREIGN KEY (agent_id) REFERENCES public.agents(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.iocs
            ADD CONSTRAINT ioc_user_id_fkey
                FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;

        ALTER TABLE ONLY public.iocs
            ADD CONSTRAINT agent_ioc_id_fkey
                FOREIGN KEY (agent_task_update_id) REFERENCES public.agent_task_updates(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.modules
            ADD CONSTRAINT module_language_id_fkey
                FOREIGN KEY (language_id) REFERENCES public.languages(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.payloads
            ADD CONSTRAINT payload_agent_type_architecture_id_fkey
                FOREIGN KEY (agent_type_architecture_id) REFERENCES public.agent_type_architectures(id) ON DELETE CASCADE;

        ALTER TABLE ONLY public.payloads
            ADD CONSTRAINT payload_agent_type_configuration_id_fkey
                FOREIGN KEY (agent_type_configuration_id) REFERENCES public.agent_type_configurations(id) ON DELETE CASCADE;

        ALTER TABLE ONLY public.payloads
            ADD CONSTRAINT payload_agent_type_format_id_fkey
                FOREIGN KEY (agent_type_format_id) REFERENCES public.agent_type_formats(id) ON DELETE CASCADE;

        ALTER TABLE ONLY public.payloads
            ADD CONSTRAINT payload_agent_type_id_fkey
                FOREIGN KEY (agent_type_id) REFERENCES public.agent_types(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.payloads
            ADD CONSTRAINT payload_agent_type_operating_system_id_fkey
                FOREIGN KEY (agent_type_operating_system_id) REFERENCES public.agent_type_operating_systems(id) ON DELETE CASCADE;

        ALTER TABLE ONLY public.payloads
            ADD CONSTRAINT payload_agent_type_version_id_fkey
                FOREIGN KEY (agent_type_version_id) REFERENCES public.agent_type_versions(id) ON DELETE CASCADE;

        ALTER TABLE ONLY public.payloads
            ADD CONSTRAINT payload_transport_id_fkey
                FOREIGN KEY (transport_id) REFERENCES public.transports(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.payloads
            ADD CONSTRAINT payloads_created_by_fkey
                FOREIGN KEY (created_by) REFERENCES public.users(id) ON UPDATE RESTRICT ON DELETE RESTRICT;

        ALTER TABLE ONLY public.staging_messages
            ADD CONSTRAINT staging_message_payload_id_fkey
                FOREIGN KEY (payload_id) REFERENCES public.payloads(id) ON DELETE CASCADE;

        ALTER TABLE ONLY public.staging_messages
            ADD CONSTRAINT staging_message_staging_response_id_fkey
                FOREIGN KEY (staging_response_id) REFERENCES public.staging_responses(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.staging_messages
            ADD CONSTRAINT staging_message_transport_id_fkey
                FOREIGN KEY (transport_id) REFERENCES public.transports(id) ON DELETE CASCADE;

        ALTER TABLE ONLY public.staging_responses
            ADD CONSTRAINT staging_response_agent_agent_id_fkey
                FOREIGN KEY (agent_id) REFERENCES public.agents(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.faction_files
            ADD CONSTRAINT user_faction_file_id_fkey
                FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE RESTRICT;

        ALTER TABLE ONLY public.users
            ADD CONSTRAINT user_role_id_fkey
                FOREIGN KEY (role_id) REFERENCES public.user_roles(id) ON DELETE RESTRICT;

        /*
         Indexes
         */

        CREATE UNIQUE INDEX agent_name_uindex ON public.agents USING btree (name);

        CREATE UNIQUE INDEX agent_task_name_uindex ON public.agent_tasks USING btree (name);

        CREATE UNIQUE INDEX api_keys_id_uindex ON public.api_keys USING btree (id);

        CREATE UNIQUE INDEX api_keys_name_uindex ON public.api_keys USING btree (name);

        CREATE UNIQUE INDEX agent_task_console_message_id_uindex ON public.agent_tasks USING btree (console_message_id);

        CREATE UNIQUE INDEX agent_task_message_agent_task_id_uindex ON public.agent_task_messages USING btree (agent_task_id);

        CREATE UNIQUE INDEX staging_message_staging_response_id_uindex ON public.staging_messages USING btree (staging_response_id);

        CREATE UNIQUE INDEX staging_response_agent_id_uindex ON public.staging_responses USING btree (agent_id);

        CREATE UNIQUE INDEX payload_filename_uindex ON public.payloads USING btree (filename);

        CREATE UNIQUE INDEX payload_name_uindex ON public.payloads USING btree (name);

        CREATE INDEX agent_agent_type_id_index ON public.agents USING btree (agent_type_id);

        CREATE INDEX agent_checkin_agent_id_index ON public.agent_checkins USING btree (agent_id);

        CREATE INDEX agent_checkin_transport_id_index ON public.agent_checkins USING btree (transport_id);

        CREATE INDEX agent_payload_id_index ON public.agents USING btree (payload_id);

        CREATE INDEX agent_task_agent_id_index ON public.agent_tasks USING btree (agent_id);

        CREATE INDEX agent_task_message_agent_id_index ON public.agent_task_messages USING btree (agent_id);

        CREATE INDEX agent_task_update_agent_id_index ON public.agent_task_updates USING btree (agent_id);

        CREATE INDEX agent_task_update_task_id_index ON public.agent_task_updates USING btree (task_id);

        CREATE INDEX agent_transport_id_index ON public.agents USING btree (transport_id);

        CREATE INDEX agent_transport_type_agent_type_id_index ON public.agent_transport_types USING btree (agent_type_id);

        CREATE INDEX agent_transports_xref_transport_id_index ON public.agent_transports_xref USING btree (transport_id);

        CREATE INDEX agent_type_architecture_agent_type_id_index ON public.agent_type_architectures USING btree (agent_type_id);

        CREATE INDEX agent_type_configuration_agent_type_id_index ON public.agent_type_configurations USING btree (agent_type_id);

        CREATE INDEX agent_type_format_agent_type_id_index ON public.agent_type_formats USING btree (agent_type_id);

        CREATE INDEX agent_type_language_id_index ON public.agent_types USING btree (language_id);

        CREATE INDEX agent_type_operating_system_agent_type_id_index ON public.agent_type_operating_systems USING btree (agent_type_id);

        CREATE INDEX agent_type_version_agent_type_id_index ON public.agent_type_versions USING btree (agent_type_id);

        CREATE INDEX agent_modules_xref_module_id_index ON public.agent_modules_xref USING btree (module_id);

        CREATE INDEX command_agent_type_id_index ON public.commands USING btree (agent_type_id);

        CREATE INDEX command_module_id_index ON public.commands USING btree (module_id);

        CREATE INDEX command_parameter_command_id_index ON public.command_parameters USING btree (command_id);

        CREATE INDEX console_message_agent_id_index ON public.console_messages USING btree (agent_id);

        CREATE INDEX console_message_user_id_index ON public.console_messages USING btree (user_id);

        CREATE INDEX faction_file_agent_id_index ON public.faction_files USING btree (agent_id);

        CREATE INDEX faction_file_user_id_index ON public.faction_files USING btree (user_id);

        CREATE INDEX ioc_agent_task_update_id_index ON public.iocs USING btree (agent_task_update_id);

        CREATE INDEX ioc_user_id_index ON public.iocs USING btree (user_id);

        CREATE INDEX module_language_id_index ON public.modules USING btree (language_id);

        CREATE INDEX payload_agent_transport_type_id_index ON public.payloads USING btree (agent_transport_type_id);

        CREATE INDEX payload_agent_type_architecture_id_index ON public.payloads USING btree (agent_type_architecture_id);

        CREATE INDEX payload_agent_type_configuration_id_index ON public.payloads USING btree (agent_type_configuration_id);

        CREATE INDEX payload_agent_type_format_id_index ON public.payloads USING btree (agent_type_format_id);

        CREATE INDEX payload_agent_type_id_index ON public.payloads USING btree (agent_type_id);

        CREATE INDEX payload_agent_type_operating_system_id_index ON public.payloads USING btree (agent_type_operating_system_id);

        CREATE INDEX payload_agent_type_version_id_index ON public.payloads USING btree (agent_type_version_id);

        CREATE INDEX payload_language_id_index ON public.payloads USING btree (language_id);

        CREATE INDEX payload_transport_id_index ON public.payloads USING btree (transport_id);

        CREATE INDEX staging_message_payload_id_index ON public.staging_messages USING btree (payload_id);

        CREATE INDEX staging_message_transport_id_index ON public.staging_messages USING btree (transport_id);

        CREATE INDEX user_role_id_index ON public.users USING btree (role_id);
